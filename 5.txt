


import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from math import exp
#-----------------------------------------------------------------------------
df = pd.read_csv('pract5.csv')
df.head()
#----------------------------------------------------------
df.describe()
#-------------------------------------------------
# visulization of dataset

plt.scatter(df.Age,df.Purchased)
plt.xlabel('age')
plt.ylabel('purchased')
plt.show()

# devide the dataset to training and test set
X_train,X_test,Y_train,Y_test = train_test_split(df.Age,df.Purchased,test_size=0.29)
#-----------------------------------------------------------------------------------------------------




import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import confusion_matrix

df = pd.read_csv('pract5.csv')

# Split the data into features and labels
X_train, X_test, y_train, y_test = train_test_split(df[['Age']], df['Purchased'], test_size=0.29)

# Train the logistic regression model
model = LogisticRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)
#---------------------------------------------
# Calculate the confusion matrix
tn, fp, fn, tp = confusion_matrix(y_test, y_pred).ravel()

# print values
print("True Negatives: ",tn)
print("False Positives: ",fp)
print("False Negatives: ",fn)
print("True Positives: ",tp)
#-----------------------
Accuracy = (tn+tp)*100/(tn+tp+fp+fn)
print("Accuracy : {:0.2f}%".format(Accuracy))
#-------------------------
#Precision
Precision = tp/(tp+fp)
print("Precision {:0.2f}".format(Precision))
#-------------------------------------
#Recall
Recall = tp/(tp+fn)
print("Recall {:0.2f}".format(Recall))
#--------------------------------------------
#Error rate
err = (fp + fn)/(tp + tn + fn + fp)
print("Error rate {:0.2f}".format(err))
